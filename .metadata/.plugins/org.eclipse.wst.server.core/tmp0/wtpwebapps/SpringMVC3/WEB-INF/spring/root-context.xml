<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://mybatis.org/schema/mybatis-spring 
   http://mybatis.org/schema/mybatis-spring-1.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- db 환경설정하는 파일 -->
	
	<!-- 1.HikariCP안에 있는 객체를 생성 == Connection 한개-->
	<!-- HikariConfig : HikariCP 환경설정을 위한 객체-->
     <!-- 자바로 하면 new HikariConfig()을 생성한 것임 -->
     <!-- bean운 객체 생성하는 또 다른 문법 
     HikariConfig hikariConfig =  new HikariConfig(); 
     hikariConfig.setxxxx("root");
     hikariConfig.setxxxx("12345");
     hikariConfig.setxxxx("");
     hikariConfig.setxxxx("");
     -->
<bean class="com.zaxxer.hikari.HikariConfig" id="hikariConfig">	
	<property name="username" value="root"/>
	<property name="password" value="12345"/>
	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bigdata"/>
	<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>	
</bean>	

<!-- 2.HikariDataSource : 위쪽에 있는 config 값을 기준으로 DBCP 생성 -->
<!-- HikariDataSource aa = new HikariDataSource(hikariConfig) -->
<bean class="com.zaxxer.hikari.HikariDataSource" id="dataSource">
<!-- ref="hikariConfig" :위의 id를 참조  -->
    <constructor-arg ref="hikariConfig"/>   
</bean>
<!-- 3. 세션팩토리를 만들자 sqlsessionfactorybean 생성
:session 빌려오고 사용하고 반납하는 역할을 스프링에서 다 해준다
: mybatis-spring 라이브러리 안쪽에 존재-->
<!-- DBCP을 실행할 수 있는  factorybean 생성 -->
<!-- id는 안줘도 됨 -->
<bean class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
</bean>

<!-- 4.SqlSessionFactoryBean이 Mapper 인터페이스를 구현해야한다
  Mapper 파일의 위치가 어디에 있는지 알려줘야한다 
  * Mapper 파일은 테이블 단위로 만들어서 여러개가 되므로
  package 자체를 스캔하게 한다-->
  <mybatis-spring:scan base-package="com.smhrd.db"/>
  


		 	
</beans>
<!-- bean태그 문법 공부필요함  -->